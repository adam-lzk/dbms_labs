SELECT Товары.[Название], Ассортимент.количество, Ассортимент.цена 
FROM Товары INNER JOIN Ассортимент 
ON Товары.id_товара = ассортимент.id_товара 
WHERE Ассортимент.цена > 12



SELECT id_магазина,id_товара,  цена * 0.7  As [Цена со скидкой]
From Ассортимент WHERE 
Количество > 3;



SELECT Сеть.Название as [название сети] , Сеть.сайт, Магазины.название as [название магазина], магазины.улица, магазины.дом, магазины.корпус
FROM Сеть LEFT JOIN Магазины
ON Сеть.id_сети = магазины.id_сети;



SELECT id_товара FROM ассортимент GROUP BY id_товара
HAVING Count(*) = 2;

-- отбирает id товаров, продаваемых двумя магазинами



INSERT INTO Ассортимент (id_магазина, id_товара, цена, количество) VALUES (7, 1, 11, 3);



DELETE FROM Товары WHERE год_издания < 2019



UPDATE Магазины
SET  дом = 3, корпус =1 
WHERE id_магазина = 11;



SELECT Товары.название, товары.издатель, товары.год_издания INTO Новые_книги
FROM Товары
WHERE Товары.год_издания > 2019;



SELECT id_сети as id, название FROM сеть 
UNION 
SELECT id_магазина, название FROM магазины
order by название



SELECT id_магазина, id_товара, количество FROM ассортимент
WHERE цена < (SELECT AVG(цена) FROM ассортимент);

--отбор записей основного запроса. вывод id магазина, товара и количество товаров, если цена товара меньше средней



CREATE TABLE Сотрудники(id_сотрудника INT PRIMARY KEY IDENTITY(1,1), id_магазина int NOT NULL, Фамилия nvarchar(50), Имя nvarchar(50), Отчество nvarchar(50))



CREATE INDEX AscAddress ON магазины(Улица, дом, корпус)



CREATE VIEW наличие_1 (название, адрес) AS
SELECT название, 'ул.'+ Улица + ', д.' + дом + ', к. ' + корпус
FROM магазины INNER JOIN ассортимент ON магазины.id_магазина = ассортимент.id_магазина 
WHERE id_товара = 1 
--магазины, где в наличии товар с id 1
